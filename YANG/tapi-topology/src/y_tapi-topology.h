
#ifndef _H_y_tapi_topology
#define _H_y_tapi_topology
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    Yuma SIL header
    module tapi-topology
    revision 2016-12-15
    namespace urn:onf:params:xml:ns:yang:TapiTopology
    organization Open Networking Foundation (ONF) / Open Transport Working Group(OTWG) / Transport API (TAPI) Project

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_tapi_topology_M_tapi_topology (const xmlChar *)"tapi-topology"
#define y_tapi_topology_R_tapi_topology (const xmlChar *)"2016-12-15"

#define y_tapi_topology_N_administrative_state (const xmlChar *)"administrative-state"
#define y_tapi_topology_N_aggregated_node_edge_point (const xmlChar *)"aggregated-node-edge-point"
#define y_tapi_topology_N_available_capacity (const xmlChar *)"available-capacity"
#define y_tapi_topology_N_capacity_assigned_to_user_view (const xmlChar *)"capacity-assigned-to-user-view"
#define y_tapi_topology_N_capacity_interaction_algorithm (const xmlChar *)"capacity-interaction-algorithm"
#define y_tapi_topology_N_client_node_edge_point (const xmlChar *)"client-node-edge-point"
#define y_tapi_topology_N_color_aware (const xmlChar *)"color-aware"
#define y_tapi_topology_N_committed_burst_size (const xmlChar *)"committed-burst-size"
#define y_tapi_topology_N_committed_information_rate (const xmlChar *)"committed-information-rate"
#define y_tapi_topology_N_cost_algorithm (const xmlChar *)"cost-algorithm"
#define y_tapi_topology_N_cost_characteristic (const xmlChar *)"cost-characteristic"
#define y_tapi_topology_N_cost_name (const xmlChar *)"cost-name"
#define y_tapi_topology_N_cost_value (const xmlChar *)"cost-value"
#define y_tapi_topology_N_coupling_flag (const xmlChar *)"coupling-flag"
#define y_tapi_topology_N_delivery_order_characteristic (const xmlChar *)"delivery-order-characteristic"
#define y_tapi_topology_N_direction (const xmlChar *)"direction"
#define y_tapi_topology_N_encap_topology (const xmlChar *)"encap-topology"
#define y_tapi_topology_N_ep_id_or_name (const xmlChar *)"ep-id-or-name"
#define y_tapi_topology_N_error_characteristic (const xmlChar *)"error-characteristic"
#define y_tapi_topology_N_extensions (const xmlChar *)"extensions"
#define y_tapi_topology_N_fixed_latency_characteristic (const xmlChar *)"fixed-latency-characteristic"
#define y_tapi_topology_N_get_link_details (const xmlChar *)"get-link-details"
#define y_tapi_topology_N_get_node_details (const xmlChar *)"get-node-details"
#define y_tapi_topology_N_get_node_edge_point_details (const xmlChar *)"get-node-edge-point-details"
#define y_tapi_topology_N_get_topology_details (const xmlChar *)"get-topology-details"
#define y_tapi_topology_N_get_topology_list (const xmlChar *)"get-topology-list"
#define y_tapi_topology_N_jitter_characteristic (const xmlChar *)"jitter-characteristic"
#define y_tapi_topology_N_label (const xmlChar *)"label"
#define y_tapi_topology_N_latency_characteristic (const xmlChar *)"latency-characteristic"
#define y_tapi_topology_N_layer_protocol (const xmlChar *)"layer-protocol"
#define y_tapi_topology_N_layer_protocol_adjacency_validated (const xmlChar *)"layer-protocol-adjacency-validated"
#define y_tapi_topology_N_layer_protocol_name (const xmlChar *)"layer-protocol-name"
#define y_tapi_topology_N_lifecycle_state (const xmlChar *)"lifecycle-state"
#define y_tapi_topology_N_link (const xmlChar *)"link"
#define y_tapi_topology_N_link_id_or_name (const xmlChar *)"link-id-or-name"
#define y_tapi_topology_N_link_port_direction (const xmlChar *)"link-port-direction"
#define y_tapi_topology_N_link_port_role (const xmlChar *)"link-port-role"
#define y_tapi_topology_N_local_id (const xmlChar *)"local-id"
#define y_tapi_topology_N_loss_characteristic (const xmlChar *)"loss-characteristic"
#define y_tapi_topology_N_lp_transition (const xmlChar *)"lp-transition"
#define y_tapi_topology_N_mapped_service_end_point (const xmlChar *)"mapped-service-end-point"
#define y_tapi_topology_N_name (const xmlChar *)"name"
#define y_tapi_topology_N_network_topology (const xmlChar *)"network-topology"
#define y_tapi_topology_N_node (const xmlChar *)"node"
#define y_tapi_topology_N_node_edge_point (const xmlChar *)"node-edge-point"
#define y_tapi_topology_N_node_id_or_name (const xmlChar *)"node-id-or-name"
#define y_tapi_topology_N_operational_state (const xmlChar *)"operational-state"
#define y_tapi_topology_N_owned_node_edge_point (const xmlChar *)"owned-node-edge-point"
#define y_tapi_topology_N_packet_bw_profile_type (const xmlChar *)"packet-bw-profile-type"
#define y_tapi_topology_N_peak_burst_size (const xmlChar *)"peak-burst-size"
#define y_tapi_topology_N_peak_information_rate (const xmlChar *)"peak-information-rate"
#define y_tapi_topology_N_repeat_delivery_characteristic (const xmlChar *)"repeat-delivery-characteristic"
#define y_tapi_topology_N_risk_characteristic (const xmlChar *)"risk-characteristic"
#define y_tapi_topology_N_risk_characteristic_name (const xmlChar *)"risk-characteristic-name"
#define y_tapi_topology_N_risk_identifier_list (const xmlChar *)"risk-identifier-list"
#define y_tapi_topology_N_risk_parameter (const xmlChar *)"risk-parameter"
#define y_tapi_topology_N_server_integrity_process_characteristic (const xmlChar *)"server-integrity-process-characteristic"
#define y_tapi_topology_N_state (const xmlChar *)"state"
#define y_tapi_topology_N_termination_direction (const xmlChar *)"termination-direction"
#define y_tapi_topology_N_termination_state (const xmlChar *)"termination-state"
#define y_tapi_topology_N_topology (const xmlChar *)"topology"
#define y_tapi_topology_N_topology_id_or_name (const xmlChar *)"topology-id-or-name"
#define y_tapi_topology_N_total_potential_capacity (const xmlChar *)"total-potential-capacity"
#define y_tapi_topology_N_total_size (const xmlChar *)"total-size"
#define y_tapi_topology_N_traffic_property_name (const xmlChar *)"traffic-property-name"
#define y_tapi_topology_N_traffic_property_queing_latency (const xmlChar *)"traffic-property-queing-latency"
#define y_tapi_topology_N_transfer_capacity (const xmlChar *)"transfer-capacity"
#define y_tapi_topology_N_transfer_cost (const xmlChar *)"transfer-cost"
#define y_tapi_topology_N_transfer_integrity (const xmlChar *)"transfer-integrity"
#define y_tapi_topology_N_transfer_timing (const xmlChar *)"transfer-timing"
#define y_tapi_topology_N_transitioned_layer_protocol_name (const xmlChar *)"transitioned-layer-protocol-name"
#define y_tapi_topology_N_unavailable_time_characteristic (const xmlChar *)"unavailable-time-characteristic"
#define y_tapi_topology_N_uuid (const xmlChar *)"uuid"
#define y_tapi_topology_N_validation (const xmlChar *)"validation"
#define y_tapi_topology_N_validation_mechanism (const xmlChar *)"validation-mechanism"
#define y_tapi_topology_N_validation_robustness (const xmlChar *)"validation-robustness"
#define y_tapi_topology_N_value (const xmlChar *)"value"
#define y_tapi_topology_N_value_name (const xmlChar *)"value-name"
#define y_tapi_topology_N_wander_characteristic (const xmlChar *)"wander-characteristic"
/********************************************************************
* FUNCTION y_tapi_topology_init
* 
* initialize the tapi-topology server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_tapi_topology_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_tapi_topology_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_tapi_topology_init2 (void);

/********************************************************************
* FUNCTION y_tapi_topology_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_tapi_topology_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif

#ifndef _H_u_tapi_common
#define _H_u_tapi_common
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module tapi-common
    revision 2016-12-15
    namespace urn:onf:params:xml:ns:yang:TapiCommon
    organization Open Networking Foundation (ONF) / Open Transport Working Group(OTWG) / Transport API (TAPI) Project

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "agt_rpc.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_tapi-common.h"

#ifdef __cplusplus
extern "C" {
#endif

/* list /context/nw-topology-service/name */
typedef struct y_tapi_common_T_context_nw_topology_service_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_nw_topology_service_name;

/* list /context/nw-topology-service/label */
typedef struct y_tapi_common_T_context_nw_topology_service_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_nw_topology_service_label;

/* container /context/nw-topology-service/extensions */
typedef struct y_tapi_common_T_context_nw_topology_service_extensions_ {
} y_tapi_common_T_context_nw_topology_service_extensions;

/* container /context/nw-topology-service */
typedef struct y_tapi_common_T_context_nw_topology_service_ {
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_nw_topology_service_extensions extensions;
} y_tapi_common_T_context_nw_topology_service;

/* list /context/connectivity-service/name */
typedef struct y_tapi_common_T_context_connectivity_service_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_connectivity_service_name;

/* list /context/connectivity-service/label */
typedef struct y_tapi_common_T_context_connectivity_service_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_connectivity_service_label;

/* container /context/connectivity-service/extensions */
typedef struct y_tapi_common_T_context_connectivity_service_extensions_ {
} y_tapi_common_T_context_connectivity_service_extensions;

/* list /context/connectivity-service */
typedef struct y_tapi_common_T_context_connectivity_service_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_connectivity_service_extensions extensions;
} y_tapi_common_T_context_connectivity_service;

/* list /context/virtual-nw-service/name */
typedef struct y_tapi_common_T_context_virtual_nw_service_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_virtual_nw_service_name;

/* list /context/virtual-nw-service/label */
typedef struct y_tapi_common_T_context_virtual_nw_service_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_virtual_nw_service_label;

/* container /context/virtual-nw-service/extensions */
typedef struct y_tapi_common_T_context_virtual_nw_service_extensions_ {
} y_tapi_common_T_context_virtual_nw_service_extensions;

/* list /context/virtual-nw-service */
typedef struct y_tapi_common_T_context_virtual_nw_service_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_virtual_nw_service_extensions extensions;
} y_tapi_common_T_context_virtual_nw_service;

/* list /context/path-comp-service/name */
typedef struct y_tapi_common_T_context_path_comp_service_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_path_comp_service_name;

/* list /context/path-comp-service/label */
typedef struct y_tapi_common_T_context_path_comp_service_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_path_comp_service_label;

/* container /context/path-comp-service/extensions */
typedef struct y_tapi_common_T_context_path_comp_service_extensions_ {
} y_tapi_common_T_context_path_comp_service_extensions;

/* list /context/path-comp-service */
typedef struct y_tapi_common_T_context_path_comp_service_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_path_comp_service_extensions extensions;
} y_tapi_common_T_context_path_comp_service;

/* list /context/notif-subscription/name */
typedef struct y_tapi_common_T_context_notif_subscription_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_notif_subscription_name;

/* list /context/notif-subscription/label */
typedef struct y_tapi_common_T_context_notif_subscription_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_notif_subscription_label;

/* container /context/notif-subscription/extensions */
typedef struct y_tapi_common_T_context_notif_subscription_extensions_ {
} y_tapi_common_T_context_notif_subscription_extensions;

/* list /context/notif-subscription */
typedef struct y_tapi_common_T_context_notif_subscription_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_notif_subscription_extensions extensions;
} y_tapi_common_T_context_notif_subscription;

/* list /context/service-end-point/name */
typedef struct y_tapi_common_T_context_service_end_point_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_service_end_point_name;

/* list /context/service-end-point/label */
typedef struct y_tapi_common_T_context_service_end_point_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_service_end_point_label;

/* container /context/service-end-point/extensions */
typedef struct y_tapi_common_T_context_service_end_point_extensions_ {
} y_tapi_common_T_context_service_end_point_extensions;

/* list /context/service-end-point/layer-protocol/name */
typedef struct y_tapi_common_T_context_service_end_point_layer_protocol_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_service_end_point_layer_protocol_name;

/* container /context/service-end-point/layer-protocol/extensions */
typedef struct y_tapi_common_T_context_service_end_point_layer_protocol_extensions_ {
} y_tapi_common_T_context_service_end_point_layer_protocol_extensions;

/* list /context/service-end-point/layer-protocol */
typedef struct y_tapi_common_T_context_service_end_point_layer_protocol_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
    xmlChar *termination_direction;
    xmlChar *termination_state;
    xmlChar *local_id;
    dlq_hdr_t name;
    y_tapi_common_T_context_service_end_point_layer_protocol_extensions extensions;
} y_tapi_common_T_context_service_end_point_layer_protocol;

/* container /context/service-end-point/state */
typedef struct y_tapi_common_T_context_service_end_point_state_ {
    xmlChar *lifecycle_state;
} y_tapi_common_T_context_service_end_point_state;

/* list /context/service-end-point */
typedef struct y_tapi_common_T_context_service_end_point_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_service_end_point_extensions extensions;
    dlq_hdr_t layer_protocol;
    y_tapi_common_T_context_service_end_point_state state;
    xmlChar *direction;
} y_tapi_common_T_context_service_end_point;

/* list /context/topology/name */
typedef struct y_tapi_common_T_context_topology_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_topology_name;

/* list /context/topology/label */
typedef struct y_tapi_common_T_context_topology_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_topology_label;

/* container /context/topology/extensions */
typedef struct y_tapi_common_T_context_topology_extensions_ {
} y_tapi_common_T_context_topology_extensions;

/* list /context/topology */
typedef struct y_tapi_common_T_context_topology_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_topology_extensions extensions;
} y_tapi_common_T_context_topology;

/* list /context/connection/name */
typedef struct y_tapi_common_T_context_connection_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_connection_name;

/* list /context/connection/label */
typedef struct y_tapi_common_T_context_connection_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_connection_label;

/* container /context/connection/extensions */
typedef struct y_tapi_common_T_context_connection_extensions_ {
} y_tapi_common_T_context_connection_extensions;

/* list /context/connection */
typedef struct y_tapi_common_T_context_connection_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_connection_extensions extensions;
} y_tapi_common_T_context_connection;

/* list /context/path/name */
typedef struct y_tapi_common_T_context_path_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_path_name;

/* list /context/path/label */
typedef struct y_tapi_common_T_context_path_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_path_label;

/* container /context/path/extensions */
typedef struct y_tapi_common_T_context_path_extensions_ {
} y_tapi_common_T_context_path_extensions;

/* list /context/path */
typedef struct y_tapi_common_T_context_path_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_path_extensions extensions;
} y_tapi_common_T_context_path;

/* list /context/notification/name */
typedef struct y_tapi_common_T_context_notification_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_notification_name;

/* list /context/notification/label */
typedef struct y_tapi_common_T_context_notification_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_notification_label;

/* container /context/notification/extensions */
typedef struct y_tapi_common_T_context_notification_extensions_ {
} y_tapi_common_T_context_notification_extensions;

/* list /context/notification */
typedef struct y_tapi_common_T_context_notification_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_notification_extensions extensions;
} y_tapi_common_T_context_notification;

/* list /context/name */
typedef struct y_tapi_common_T_context_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_name;

/* list /context/label */
typedef struct y_tapi_common_T_context_label_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_context_label;

/* container /context/extensions */
typedef struct y_tapi_common_T_context_extensions_ {
} y_tapi_common_T_context_extensions;

/* container /context */
typedef struct y_tapi_common_T_context_ {
    y_tapi_common_T_context_nw_topology_service nw_topology_service;
    dlq_hdr_t connectivity_service;
    dlq_hdr_t virtual_nw_service;
    dlq_hdr_t path_comp_service;
    dlq_hdr_t notif_subscription;
    dlq_hdr_t service_end_point;
    dlq_hdr_t topology;
    dlq_hdr_t connection;
    dlq_hdr_t path;
    dlq_hdr_t notification;
    xmlChar *uuid;
    dlq_hdr_t name;
    dlq_hdr_t label;
    y_tapi_common_T_context_extensions extensions;
} y_tapi_common_T_context;

/* container /get-service-end-point-details/input */
typedef struct y_tapi_common_T_get_service_end_point_details_input_ {
    xmlChar *service_epid_or_name;
} y_tapi_common_T_get_service_end_point_details_input;

/* list /get-service-end-point-details/output/service-end-point/layer-protocol/name */
typedef struct y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_name;

/* container /get-service-end-point-details/output/service-end-point/layer-protocol/extensions */
typedef struct y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_extensions_ {
} y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_extensions;

/* list /get-service-end-point-details/output/service-end-point/layer-protocol */
typedef struct y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
    xmlChar *termination_direction;
    xmlChar *termination_state;
    xmlChar *local_id;
    dlq_hdr_t name;
    y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol_extensions extensions;
} y_tapi_common_T_get_service_end_point_details_output_service_end_point_layer_protocol;

/* container /get-service-end-point-details/output/service-end-point/state */
typedef struct y_tapi_common_T_get_service_end_point_details_output_service_end_point_state_ {
    xmlChar *lifecycle_state;
} y_tapi_common_T_get_service_end_point_details_output_service_end_point_state;

/* container /get-service-end-point-details/output/service-end-point */
typedef struct y_tapi_common_T_get_service_end_point_details_output_service_end_point_ {
    dlq_hdr_t layer_protocol;
    y_tapi_common_T_get_service_end_point_details_output_service_end_point_state state;
    xmlChar *direction;
} y_tapi_common_T_get_service_end_point_details_output_service_end_point;

/* container /get-service-end-point-details/output */
typedef struct y_tapi_common_T_get_service_end_point_details_output_ {
    y_tapi_common_T_get_service_end_point_details_output_service_end_point service_end_point;
} y_tapi_common_T_get_service_end_point_details_output;

/* rpc /get-service-end-point-details */
typedef struct y_tapi_common_T_get_service_end_point_details_ {
    y_tapi_common_T_get_service_end_point_details_input input;
    y_tapi_common_T_get_service_end_point_details_output output;
} y_tapi_common_T_get_service_end_point_details;

/* list /get-service-end-point-list/output/service-end-point/layer-protocol/name */
typedef struct y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_name_ {
    dlq_hdr_t qhdr;
    xmlChar *value_name;
    xmlChar *value;
} y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_name;

/* container /get-service-end-point-list/output/service-end-point/layer-protocol/extensions */
typedef struct y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_extensions_ {
} y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_extensions;

/* list /get-service-end-point-list/output/service-end-point/layer-protocol */
typedef struct y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_ {
    dlq_hdr_t qhdr;
    xmlChar *layer_protocol_name;
    xmlChar *termination_direction;
    xmlChar *termination_state;
    xmlChar *local_id;
    dlq_hdr_t name;
    y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol_extensions extensions;
} y_tapi_common_T_get_service_end_point_list_output_service_end_point_layer_protocol;

/* container /get-service-end-point-list/output/service-end-point/state */
typedef struct y_tapi_common_T_get_service_end_point_list_output_service_end_point_state_ {
    xmlChar *lifecycle_state;
} y_tapi_common_T_get_service_end_point_list_output_service_end_point_state;

/* list /get-service-end-point-list/output/service-end-point */
typedef struct y_tapi_common_T_get_service_end_point_list_output_service_end_point_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t layer_protocol;
    y_tapi_common_T_get_service_end_point_list_output_service_end_point_state state;
    xmlChar *direction;
} y_tapi_common_T_get_service_end_point_list_output_service_end_point;

/* container /get-service-end-point-list/output */
typedef struct y_tapi_common_T_get_service_end_point_list_output_ {
    dlq_hdr_t service_end_point;
} y_tapi_common_T_get_service_end_point_list_output;

/* container /get-service-end-point-list/input */
typedef struct y_tapi_common_T_get_service_end_point_list_input_ {
} y_tapi_common_T_get_service_end_point_list_input;

/* rpc /get-service-end-point-list */
typedef struct y_tapi_common_T_get_service_end_point_list_ {
    y_tapi_common_T_get_service_end_point_list_output output;
    y_tapi_common_T_get_service_end_point_list_input input;
} y_tapi_common_T_get_service_end_point_list;
/********************************************************************
* FUNCTION u_tapi_common_context_nw_topology_service_uuid_get
* 
* Get database object callback
* Path: /context/nw-topology-service/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_nw_topology_service_uuid_get (
    val_value_t *dstval);

/********************************************************************
* FUNCTION u_tapi_common_context_nw_topology_service_name_value_name_get
* 
* Get database object callback
* Path: /context/nw-topology-service/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_nw_topology_service_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_nw_topology_service_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_nw_topology_service_name_value_get
* 
* Get database object callback
* Path: /context/nw-topology-service/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_nw_topology_service_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_nw_topology_service_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_nw_topology_service_label_value_name_get
* 
* Get database object callback
* Path: /context/nw-topology-service/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_nw_topology_service_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_nw_topology_service_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_nw_topology_service_label_value_get
* 
* Get database object callback
* Path: /context/nw-topology-service/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_nw_topology_service_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_nw_topology_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_uuid_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_name_value_name_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_name_value_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_name_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_label_value_name_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_label_value_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_label_edit
* 
* Edit database object callback
* Path: /context/connectivity-service/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid,
    const xmlChar *k_context_connectivity_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_connectivity_service_edit
* 
* Edit database object callback
* Path: /context/connectivity-service
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connectivity_service_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_connectivity_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_uuid_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_name_value_name_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_name_value_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_name_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_label_value_name_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_label_value_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_label_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid,
    const xmlChar *k_context_virtual_nw_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_virtual_nw_service_edit
* 
* Edit database object callback
* Path: /context/virtual-nw-service
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_virtual_nw_service_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_virtual_nw_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_uuid_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_name_value_name_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_name_value_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_name_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_label_value_name_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_label_value_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_label_edit
* 
* Edit database object callback
* Path: /context/path-comp-service/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid,
    const xmlChar *k_context_path_comp_service_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_path_comp_service_edit
* 
* Edit database object callback
* Path: /context/path-comp-service
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_comp_service_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_path_comp_service_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_uuid_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_name_value_name_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_name_value_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_name_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_label_value_name_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_label_value_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_label_edit
* 
* Edit database object callback
* Path: /context/notif-subscription/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid,
    const xmlChar *k_context_notif_subscription_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_notif_subscription_edit
* 
* Edit database object callback
* Path: /context/notif-subscription
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notif_subscription_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_notif_subscription_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_uuid_get
* 
* Get database object callback
* Path: /context/service-end-point/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_name_value_name_get
* 
* Get database object callback
* Path: /context/service-end-point/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_name_value_get
* 
* Get database object callback
* Path: /context/service-end-point/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_label_value_name_get
* 
* Get database object callback
* Path: /context/service-end-point/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_label_value_get
* 
* Get database object callback
* Path: /context/service-end-point/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_layer_protocol_name_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/layer-protocol-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_layer_protocol_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_termination_direction_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/termination-direction
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_termination_direction_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_termination_state_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/termination-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_termination_state_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_local_id_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/local-id
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_local_id_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_name_value_name_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id,
    const xmlChar *k_context_service_end_point_layer_protocol_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_layer_protocol_name_value_get
* 
* Get database object callback
* Path: /context/service-end-point/layer-protocol/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_layer_protocol_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid,
    const xmlChar *k_context_service_end_point_layer_protocol_local_id,
    const xmlChar *k_context_service_end_point_layer_protocol_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_state_lifecycle_state_get
* 
* Get database object callback
* Path: /context/service-end-point/state/lifecycle-state
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_state_lifecycle_state_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_service_end_point_direction_get
* 
* Get database object callback
* Path: /context/service-end-point/direction
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_service_end_point_direction_get (
    val_value_t *dstval,
    const xmlChar *k_context_service_end_point_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_topology_uuid_get
* 
* Get database object callback
* Path: /context/topology/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_topology_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_context_topology_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_topology_name_value_name_get
* 
* Get database object callback
* Path: /context/topology/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_topology_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_topology_uuid,
    const xmlChar *k_context_topology_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_topology_name_value_get
* 
* Get database object callback
* Path: /context/topology/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_topology_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_topology_uuid,
    const xmlChar *k_context_topology_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_topology_label_value_name_get
* 
* Get database object callback
* Path: /context/topology/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_topology_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_topology_uuid,
    const xmlChar *k_context_topology_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_topology_label_value_get
* 
* Get database object callback
* Path: /context/topology/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_topology_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_topology_uuid,
    const xmlChar *k_context_topology_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_connection_uuid_get
* 
* Get database object callback
* Path: /context/connection/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connection_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_context_connection_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_connection_name_value_name_get
* 
* Get database object callback
* Path: /context/connection/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connection_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_connection_uuid,
    const xmlChar *k_context_connection_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_connection_name_value_get
* 
* Get database object callback
* Path: /context/connection/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connection_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_connection_uuid,
    const xmlChar *k_context_connection_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_connection_label_value_name_get
* 
* Get database object callback
* Path: /context/connection/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connection_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_connection_uuid,
    const xmlChar *k_context_connection_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_connection_label_value_get
* 
* Get database object callback
* Path: /context/connection/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_connection_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_connection_uuid,
    const xmlChar *k_context_connection_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_path_uuid_get
* 
* Get database object callback
* Path: /context/path/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_context_path_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_path_name_value_name_get
* 
* Get database object callback
* Path: /context/path/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_path_uuid,
    const xmlChar *k_context_path_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_path_name_value_get
* 
* Get database object callback
* Path: /context/path/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_path_uuid,
    const xmlChar *k_context_path_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_path_label_value_name_get
* 
* Get database object callback
* Path: /context/path/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_path_uuid,
    const xmlChar *k_context_path_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_path_label_value_get
* 
* Get database object callback
* Path: /context/path/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_path_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_path_uuid,
    const xmlChar *k_context_path_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_notification_uuid_get
* 
* Get database object callback
* Path: /context/notification/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notification_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_context_notification_uuid);

/********************************************************************
* FUNCTION u_tapi_common_context_notification_name_value_name_get
* 
* Get database object callback
* Path: /context/notification/name/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notification_name_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_notification_uuid,
    const xmlChar *k_context_notification_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_notification_name_value_get
* 
* Get database object callback
* Path: /context/notification/name/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notification_name_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_notification_uuid,
    const xmlChar *k_context_notification_name_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_notification_label_value_name_get
* 
* Get database object callback
* Path: /context/notification/label/value-name
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notification_label_value_name_get (
    val_value_t *dstval,
    const xmlChar *k_context_notification_uuid,
    const xmlChar *k_context_notification_label_value_name);

/********************************************************************
* FUNCTION u_tapi_common_context_notification_label_value_get
* 
* Get database object callback
* Path: /context/notification/label/value
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_notification_label_value_get (
    val_value_t *dstval,
    const xmlChar *k_context_notification_uuid,
    const xmlChar *k_context_notification_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_uuid_edit
* 
* Edit database object callback
* Path: /context/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_tapi_common_context_name_value_name_edit
* 
* Edit database object callback
* Path: /context/name/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_name_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_name_value_edit
* 
* Edit database object callback
* Path: /context/name/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_name_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_name_edit
* 
* Edit database object callback
* Path: /context/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_name_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_label_value_name_edit
* 
* Edit database object callback
* Path: /context/label/value-name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_label_value_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_label_value_edit
* 
* Edit database object callback
* Path: /context/label/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_label_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_label_edit
* 
* Edit database object callback
* Path: /context/label
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_label_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_context_label_value_name);


/********************************************************************
* FUNCTION u_tapi_common_context_edit
* 
* Edit database object callback
* Path: /context
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_context_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_tapi_common_get_service_end_point_details_validate
* 
* RPC validation phase
* All YANG constraints have passed at this point.
* Add description-stmt checks in this function.
* 
* INPUTS:
*     see agt/agt_rpc.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_get_service_end_point_details_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/********************************************************************
* FUNCTION u_tapi_common_get_service_end_point_details_invoke
* 
* RPC invocation phase
* All constraints have passed at this point.
* Call device instrumentation code in this function.
* 
* INPUTS:
*     see agt/agt_rpc.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_get_service_end_point_details_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/********************************************************************
* FUNCTION u_tapi_common_get_service_end_point_list_validate
* 
* RPC validation phase
* All YANG constraints have passed at this point.
* Add description-stmt checks in this function.
* 
* INPUTS:
*     see agt/agt_rpc.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_get_service_end_point_list_validate (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);


/********************************************************************
* FUNCTION u_tapi_common_get_service_end_point_list_invoke
* 
* RPC invocation phase
* All constraints have passed at this point.
* Call device instrumentation code in this function.
* 
* INPUTS:
*     see agt/agt_rpc.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_get_service_end_point_list_invoke (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    xml_node_t *methnode);

/********************************************************************
* FUNCTION u_tapi_common_init
* 
* initialize the tapi-common server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_tapi_common_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_tapi_common_init2 (void);

/********************************************************************
* FUNCTION u_tapi_common_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_tapi_common_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif